# This file is a POMDP policy, represented as a set of "lower bound
# planes", each of which consists of an alpha vector and a corresponding
# action.  Given a particular belief b, this information can be used to
# answer two queries of interest:
#
#   1. What is a lower bound on the expected long-term reward starting
#        from belief b?
#   2. What is an action that achieves that expected reward lower bound?
#
# Each lower bound plane is only defined over a subset of the belief
# simplex--it is defined for those beliefs b such that the non-zero
# entries of b are a subset of the entries present in the plane's alpha
# vector.  If this condition holds we say the plane is 'applicable' to b.
#
# Given a belief b, both of the queries above can be answered by the
# following process: first, throw out all the planes that are not
# applicable to b.  Then, for each of the remaining planes, take the inner
# product of the plane's alpha vector with b.  The highest inner product
# value is the expected long-term reward lower bound, and the action label
# for that plane is the action that achieves the bound.

{
  policyType => "MaxPlanesLowerBound",
  numPlanes => 12,
  planes => [
    {
      action => 3,
      numEntries => 8,
      entries => [
        0, 0.00458154,
        1, -0.00902459,
        2, -0.00902459,
        3, -0.0110921,
        4, -0.659003,
        5, -0.0110921,
        6, -0.0110921,
        7, -0.0110921
      ]
    },
    {
      action => 5,
      numEntries => 8,
      entries => [
        0, 0.00405977,
        1, -0.00954636,
        2, -0.00954636,
        3, -0.00667818,
        4, -0.654589,
        5, -0.00667818,
        6, -0.00667818,
        7, -0.00667818
      ]
    },
    {
      action => 8,
      numEntries => 8,
      entries => [
        0, -0.101476,
        1, -0.115082,
        2, -0.115082,
        3, -0.00116077,
        4, -0.649072,
        5, -0.00116077,
        6, -0.00116077,
        7, -0.00116077
      ]
    },
    {
      action => 9,
      numEntries => 8,
      entries => [
        0, -0.0644792,
        1, -0.0780853,
        2, -0.0780853,
        3, -0.00888515,
        4, 0.0481573,
        5, -0.00888515,
        6, -0.00888515,
        7, -0.00888515
      ]
    },
    {
      action => 15,
      numEntries => 8,
      entries => [
        0, -0.0669604,
        1, -0.0805665,
        2, -0.0805665,
        3, -0.0144026,
        4, 0.0614714,
        5, -0.0144026,
        6, -0.0144026,
        7, -0.0144026
      ]
    },
    {
      action => 16,
      numEntries => 8,
      entries => [
        0, -0.0651793,
        1, -0.0787854,
        2, -0.0787854,
        3, -0.00667818,
        4, 0.0323342,
        5, -0.00667818,
        6, -0.00667818,
        7, -0.00667818
      ]
    },
    {
      action => 17,
      numEntries => 8,
      entries => [
        0, -0.0792516,
        1, -0.0928577,
        2, -0.0928577,
        3, -0.00447122,
        4, -0.0664277,
        5, -0.00447122,
        6, -0.00447122,
        7, -0.00447122
      ]
    },
    {
      action => 19,
      numEntries => 8,
      entries => [
        0, -0.127105,
        1, -0.140711,
        2, -0.140711,
        3, -0.00116077,
        4, -0.380448,
        5, -0.00116077,
        6, -0.00116077,
        7, -0.00116077
      ]
    },
    {
      action => 8,
      numEntries => 6,
      entries => [
        0, -0.0326186,
        1, -0.0464051,
        2, -0.0464051,
        3, -0.00192047,
        4, -0.606795,
        5, -0.00130666
      ]
    },
    {
      action => 13,
      numEntries => 8,
      entries => [
        0, -0.0660613,
        1, -0.0828188,
        2, -0.0834994,
        3, -0.00533559,
        4, 0.0184305,
        5, -0.00473681,
        6, -0.00531577,
        7, -0.00473681
      ]
    },
    {
      action => 15,
      numEntries => 6,
      entries => [
        0, -0.0645092,
        1, -0.0781397,
        2, -0.0814581,
        3, -0.0128216,
        4, 0.0623142,
        5, -0.0124585
      ]
    },
    {
      action => 5,
      numEntries => 4,
      entries => [
        0, 0.00808103,
        1, -0.00552703,
        2, -0.00553974,
        3, -0.00674194
      ]
    }
  ]
}
